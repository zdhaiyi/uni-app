if("undefined"==typeof Promise||Promise.prototype.finally||(Promise.prototype.finally=function(e){const t=this.constructor;return this.then((n=>t.resolve(e()).then((()=>n))),(n=>t.resolve(e()).then((()=>{throw n}))))}),"undefined"!=typeof uni&&uni&&uni.requireGlobal){const e=uni.requireGlobal();ArrayBuffer=e.ArrayBuffer,Int8Array=e.Int8Array,Uint8Array=e.Uint8Array,Uint8ClampedArray=e.Uint8ClampedArray,Int16Array=e.Int16Array,Uint16Array=e.Uint16Array,Int32Array=e.Int32Array,Uint32Array=e.Uint32Array,Float32Array=e.Float32Array,Float64Array=e.Float64Array,BigInt64Array=e.BigInt64Array,BigUint64Array=e.BigUint64Array}uni.restoreGlobal&&uni.restoreGlobal(Vue,weex,plus,setTimeout,clearTimeout,setInterval,clearInterval),function(e){"use strict";function t(e){return weex.requireModule(e)}function n(e,t,...n){uni.__log__?uni.__log__(e,t,...n):console[e].apply(console,[...n,t])}const a=(t,n=0)=>(n,a=e.getCurrentInstance())=>{!e.isInSSRComponentSetup&&e.injectHook(t,n,a)},s=a("onShow",3),i=a("onHide",3),o=a("onLaunch",1),l=a("onReachBottom",2),r=a("onPullDownRefresh",2),c=(e,t)=>{const n=e.__vccOpts||e;for(const[a,s]of t)n[a]=s;return n},u=c({__name:"uni-icons",props:{type:{type:String,default:""},size:{type:[Number,String],default:32},color:{type:String,default:"#333"}},setup:t=>(n,a)=>(e.openBlock(),e.createElementBlock("view",{class:e.normalizeClass(["uni-icons",[t.type?"uni-icons-"+t.type:""]]),style:e.normalizeStyle({color:t.color,"font-size":t.size+"rpx"})},["compass"===t.type?(e.openBlock(),e.createElementBlock("text",{key:0},"🧭")):"chat"===t.type?(e.openBlock(),e.createElementBlock("text",{key:1},"💬")):"chatboxes"===t.type?(e.openBlock(),e.createElementBlock("text",{key:2},"📨")):"personadd"===t.type?(e.openBlock(),e.createElementBlock("text",{key:3},"👤")):"camera"===t.type?(e.openBlock(),e.createElementBlock("text",{key:4},"📷")):"person"===t.type?(e.openBlock(),e.createElementBlock("text",{key:5},"👥")):"game"===t.type?(e.openBlock(),e.createElementBlock("text",{key:6},"🎮")):"more"===t.type?(e.openBlock(),e.createElementBlock("text",{key:7},"⋯")):"refresh"===t.type?(e.openBlock(),e.createElementBlock("text",{key:8},"🔄")):(e.openBlock(),e.createElementBlock("text",{key:9},"❓"))],6))},[["__scopeId","data-v-facdfa89"]]);const d=new class{constructor(){this.isConnected=!1,this.isConnecting=!1,this.statusCallback=null,this.vpnPlugin=null,this.isInitialized=!1,this.connectionState="disconnected",this.lastStatus=null,this.retryCount=0,this.maxRetries=3}checkPluginAvailability(){return new Promise((e=>{try{0;e(!!t("MyVpnPlugin"))}catch(a){n("error","at utils/android-vpn.js:33","检查插件可用性失败:",a),e(!1)}}))}async diagnosePlugin(){n("log","at utils/android-vpn.js:40","=== VPN插件诊断 ===");const e=uni.getSystemInfoSync();n("log","at utils/android-vpn.js:44","运行平台:",e.platform),n("log","at utils/android-vpn.js:45","应用版本:",e.appVersion),n("log","at utils/android-vpn.js:48","requireNativePlugin 类型:","function");try{const e=t("MyVpnPlugin");if(n("log","at utils/android-vpn.js:53","插件加载结果:",e?"成功":"失败"),n("log","at utils/android-vpn.js:54","插件对象类型:",typeof e),e){["startVpn","stopVpn","getVpnStatus","onVpnStatusUpdate"].forEach((t=>{n("log","at utils/android-vpn.js:60",`${t} 方法:`,"function"==typeof e[t]?"存在":"缺失")}))}}catch(a){n("log","at utils/android-vpn.js:64","插件加载异常:",a.message)}n("log","at utils/android-vpn.js:67","=== 诊断结束 ===")}async verifyPlugin(){n("log","at utils/android-vpn.js:72","=== 验证插件可用性 ===");try{const e=uni.getSystemInfoSync();if(n("log","at utils/android-vpn.js:77","运行平台:",e.platform),"android"!==e.platform)return n("log","at utils/android-vpn.js:80","非Android平台，跳过插件验证"),!1;0,n("log","at utils/android-vpn.js:91","尝试加载插件...");const a=t("MyVpnPlugin");if(n("log","at utils/android-vpn.js:93","插件加载结果:",a),!a)return n("error","at utils/android-vpn.js:96","插件加载返回 null"),!1;let s=!0;return["startVpn","stopVpn","getVpnStatus","onVpnStatusUpdate"].forEach((e=>{const t="function"==typeof a[e];n("log","at utils/android-vpn.js:106",`方法 ${e}: ${t?"存在":"缺失"}`),t||(s=!1)})),n("log","at utils/android-vpn.js:110","插件验证结果:",s?"通过":"失败"),s}catch(e){return n("error","at utils/android-vpn.js:114","插件验证异常:",e),!1}}async initialize(){if(this.isInitialized)return n("log","at utils/android-vpn.js:123","VPN功能已初始化"),this.pluginAvailable;await this.diagnosePlugin(),n("log","at utils/android-vpn.js:128","开始初始化VPN功能"),this.pluginAvailable=await this.verifyPlugin(),n("log","at utils/android-vpn.js:131","插件可用状态:",this.pluginAvailable);try{const a=uni.getSystemInfoSync();if(n("log","at utils/android-vpn.js:136","系统平台:",a.platform),"android"!==a.platform)return n("warn","at utils/android-vpn.js:139","VPN功能仅支持Android平台"),this.isInitialized=!0,this.pluginAvailable=!1,!1;0;try{if(this.vpnPlugin=t("MyVpnPlugin"),!this.vpnPlugin)throw new Error("插件加载返回null");"function"!=typeof this.vpnPlugin.startVpn||"function"!=typeof this.vpnPlugin.stopVpn?(n("error","at utils/android-vpn.js:163","VPN插件方法不完整"),this.pluginAvailable=!1):(this.pluginAvailable=!0,n("log","at utils/android-vpn.js:167","VPN插件加载成功，方法检查通过"))}catch(e){n("error","at utils/android-vpn.js:170","加载VPN插件失败:",e),this.pluginAvailable=!1}return this.pluginAvailable&&await this.setupStatusListener(),this.isInitialized=!0,n("log","at utils/android-vpn.js:180","VPN功能初始化完成，插件可用状态:",this.pluginAvailable),this.pluginAvailable}catch(a){return n("error","at utils/android-vpn.js:192","VPN初始化异常:",a),this.isInitialized=!0,this.pluginAvailable=!1,!1}}async setupStatusListener(){if(this.vpnPlugin&&"function"==typeof this.vpnPlugin.onVpnStatusUpdate)return new Promise((e=>{try{this.vpnPlugin.onVpnStatusUpdate({},(e=>{n("log","at utils/android-vpn.js:209","收到原生VPN状态更新:",JSON.stringify(e)),this.handleNativeStatusUpdate(e)})),n("log","at utils/android-vpn.js:212","VPN状态监听注册成功"),e(!0)}catch(t){n("error","at utils/android-vpn.js:215","注册状态监听失败:",t),e(!1)}}));n("warn","at utils/android-vpn.js:202","VPN插件不支持状态监听，使用模拟模式")}handleNativeStatusUpdate(e){if(!e||"object"!=typeof e)return void n("warn","at utils/android-vpn.js:224","无效的状态更新数据");const t=!!e.connected||!!e.isConnected,a=e.message||"状态更新",s=e.status||(t?"connected":"disconnected");if(this.lastStatus=e,this.isConnected=t,this.isConnecting=!1,this.connectionState=s,n("log","at utils/android-vpn.js:237","处理VPN状态更新:",{connected:t,status:s,message:a}),t&&(this.retryCount=0),this.statusCallback){const n={connected:t,isConnected:t,status:s,message:a,timestamp:e.timestamp||Date.now(),success:!1!==e.success};this.statusCallback(n)}}async connect(e){try{if(this.isInitialized||await this.initialize(),!this.pluginAvailable){let t="VPN插件不可用 - ";return this.vpnPlugin?"function"!=typeof this.vpnPlugin.startVpn?t+="startVpn方法不存在":t+="未知原因":t+="插件对象为null",n("warn","at utils/android-vpn.js:281",t+"，使用模拟模式"),this.mockConnect(e)}if(this.isConnecting)throw new Error("VPN连接正在进行中");if(this.isConnected)throw new Error("VPN已连接，请先断开");if(!e||!e.host||!e.port)throw new Error("节点信息不完整");return n("log","at utils/android-vpn.js:299","开始连接VPN，服务器:",e.host+":"+e.port),this.isConnecting=!0,this.connectionState="connecting",new Promise(((t,a)=>{const s={server:e.host,port:parseInt(e.port)||1080,username:e.account||"default",password:e.password||"default"};n("log","at utils/android-vpn.js:312","调用原生连接方法:",s);const i=setTimeout((()=>{a(new Error("VPN连接超时（30秒）"))}),3e4);this.vpnPlugin.startVpn(s,(e=>{if(clearTimeout(i),n("log","at utils/android-vpn.js:321","原生连接回调:",JSON.stringify(e)),this.isConnecting=!1,e&&e.success)this.isConnected=!0,this.connectionState="connected",t(e);else{const t=e?e.message:"连接失败，无返回结果";this.isConnected=!1,this.connectionState="disconnected",a(new Error(t))}}))}))}catch(t){throw this.isConnecting=!1,this.isConnected=!1,this.connectionState="error",n("error","at utils/android-vpn.js:342","VPN连接错误:",t),t}}handleConnectionError(e,t){this.isConnecting=!1,this.isConnected=!1,this.connectionState="error",n("error","at utils/android-vpn.js:353","VPN连接错误:",e),this.triggerStatusUpdate(!1,e,"error"),t&&t(new Error(e))}async disconnect(){n("log","at utils/android-vpn.js:365","开始断开VPN连接");try{if(!this.isConnected&&!this.isConnecting)return n("log","at utils/android-vpn.js:369","VPN未连接，无需断开"),{success:!0,message:"VPN未连接",wasConnected:!1};if(this.triggerStatusUpdate(!1,"正在断开连接...","disconnecting"),!this.vpnPlugin)throw new Error("VPN插件未初始化");return new Promise(((e,t)=>{this.vpnPlugin.stopVpn({},(a=>{if(n("log","at utils/android-vpn.js:387","原生断开回调:",JSON.stringify(a)),this.isConnecting=!1,a&&a.success)n("log","at utils/android-vpn.js:392","VPN断开指令发送成功"),e({success:!0,message:"VPN断开指令已发送",wasConnected:!0});else{const e=a?a.message:"断开失败";this.handleDisconnectionError(e,t)}}))}))}catch(e){this.handleDisconnectionError(e.message,(()=>{throw e}))}}handleDisconnectionError(e,t){n("error","at utils/android-vpn.js:420","VPN断开错误:",e),this.isConnected=!1,this.isConnecting=!1,this.connectionState="disconnected",this.triggerStatusUpdate(!1,e,"error"),t&&t(new Error(e))}onStatusUpdate(e){n("log","at utils/android-vpn.js:436","注册状态更新回调"),this.statusCallback=e,this.statusCallback&&this.triggerStatusUpdate(this.isConnected,this.isConnected?"已连接":"未连接",this.connectionState)}triggerStatusUpdate(e,t,a=null){const s={connected:e,isConnected:e,status:a||(e?"connected":"disconnected"),message:t,timestamp:Date.now()};n("log","at utils/android-vpn.js:457","触发状态更新:",s),this.statusCallback&&this.statusCallback(s)}offStatusUpdate(){n("log","at utils/android-vpn.js:466","移除状态监听"),this.statusCallback=null}async getStatus(){try{return this.isInitialized||await this.initialize(),this.vpnPlugin&&"function"==typeof this.vpnPlugin.getVpnStatus?new Promise((e=>{this.vpnPlugin.getVpnStatus({},(t=>{n("log","at utils/android-vpn.js:481","获取VPN状态结果:",JSON.stringify(t)),t&&this.handleNativeStatusUpdate(t),e(t||{isConnected:this.isConnected,connected:this.isConnected,status:this.connectionState,message:"状态查询完成",success:!0})}))})):{isConnected:this.isConnected,connected:this.isConnected,status:this.connectionState,message:"当前状态",success:!0}}catch(e){return n("error","at utils/android-vpn.js:505","获取状态错误:",e),{isConnected:!1,connected:!1,status:"error",message:e.message,success:!1}}}getConnectionSummary(){return{isConnected:this.isConnected,isConnecting:this.isConnecting,connectionState:this.connectionState,lastStatus:this.lastStatus}}async mockConnect(e){return n("log","at utils/android-vpn.js:528","模拟VPN连接:",e.host),new Promise((e=>{setTimeout((()=>{this.isConnecting=!1,this.isConnected=!0,this.connectionState="connected",this.triggerStatusUpdate(!0,"模拟连接成功","connected"),e({success:!0,message:"模拟连接成功"})}),2e3)}))}async mockDisconnect(){return n("log","at utils/android-vpn.js:547","模拟VPN断开"),new Promise((e=>{setTimeout((()=>{this.isConnected=!1,this.connectionState="disconnected",this.triggerStatusUpdate(!1,"模拟断开成功","disconnected"),e({success:!0,message:"模拟断开成功",wasConnected:!0})}),1e3)}))}},p=c({__name:"index",setup(t){const n=e.ref(!1),a=e.ref(""),i=e.ref(""),o=e.ref(!1),c=e.ref(!1),p=e.ref("未连接"),v=e.ref("--"),g=e.ref("--"),h=e.ref("连接VPN"),m=e.ref(null),y=e.ref([0]),f=e.ref([]),w=e.ref(0),V=e.ref(null),S=e.ref(1),N=e.ref(20),E=e.ref(!1),k=e.ref(!1),C=e.ref([{name:"浏览器",icon:"compass"},{name:"WhatsApp",icon:"chat"},{name:"Telegram",icon:"chatboxes"},{name:"Twitter",icon:"personadd"},{name:"Instagram",icon:"camera"},{name:"Facebook",icon:"person"},{name:"游戏",icon:"game"},{name:"全部应用",icon:"more"}]),P=e.computed((()=>o.value?"connected":c.value?"connecting":"disconnected")),A=e.computed((()=>f.value.filter((e=>{const t=!0===e.status,n=new Date(e.expire)>new Date;return t&&n}))));e.onMounted((()=>{j(),x()})),s((()=>{n.value&&(S.value=1,E.value=!1,b(!1))})),e.onUnmounted((()=>{V.value&&(clearInterval(V.value),V.value=null),d.offStatusUpdate()}));const x=async()=>{if("android"===uni.getSystemInfoSync().platform)try{await d.initialize(),d.onStatusUpdate((e=>{I(e)}));const e=await d.getStatus();I(e)}catch(e){I({connected:!1,isConnected:!1,status:"disconnected",message:"初始化失败"})}else I({connected:!1,isConnected:!1,status:"unsupported",message:"当前平台不支持VPN"})};l((()=>{E.value||k.value||(S.value++,b(!0))})),r((async()=>{S.value=1,E.value=!1,k.value=!1,await b(!1),uni.stopPullDownRefresh()}));const j=()=>{const e=uni.getStorageSync("token"),t=uni.getStorageSync("username");e&&t&&(n.value=!0,a.value=t,i.value=e)},b=async(e=!1)=>{var t;if(n.value){if(!k.value){k.value=!0,e||uni.showLoading({title:"获取节点中..."});try{const n=await uni.request({url:"http://124.223.21.69/api/nodes",method:"GET",data:{page:S.value,pageSize:N.value},header:{Authorization:"Bearer "+i.value}});if(200!==n.statusCode||!n.data)throw new Error((null==(t=n.data)?void 0:t.message)||"获取节点失败");{let t=[];t=Array.isArray(n.data)?n.data:n.data.nodes&&Array.isArray(n.data.nodes)?n.data.nodes:n.data.data&&Array.isArray(n.data.data)?n.data.data:[];const a=t.map((e=>({...e,displayName:e.tag||"未知节点",isAvailable:!0===e.status&&new Date(e.expire)>new Date,expireText:z(e.expire),hasAuth:!(!e.account||!e.password)})));if(e)f.value=[...f.value,...a];else{f.value=a;const e=a.findIndex((e=>e.isAvailable));-1!==e?m.value=e:a.length>0&&(m.value=0)}const s=n.data.total||t.length;(t.length<N.value||f.value.length>=s)&&(E.value=!0),e||uni.hideLoading()}}catch(a){e||uni.hideLoading(),uni.showToast({title:"获取节点失败",icon:"none"})}finally{k.value=!1}}}else uni.showToast({title:"请先登录",icon:"none"})},B=()=>{n.value?uni.showModal({title:"确认退出",content:"确定要退出登录吗？",success:e=>{e.confirm&&(uni.removeStorageSync("token"),uni.removeStorageSync("username"),n.value=!1,i.value="",f.value=[],m.value=null,o.value&&T(),uni.showToast({title:"已退出登录",icon:"success"}))}}):uni.navigateTo({url:"/pages/login/login"})},T=async()=>{try{await d.disconnect()}catch(e){uni.showToast({title:e.message||"断开VPN失败",icon:"none"})}},_=async()=>{if(c.value)return;if(!n.value)return void uni.showToast({title:"请先登录",icon:"none"});if(0===f.value.length)return void uni.showToast({title:"暂无可用节点",icon:"none"});if(null===m.value)return void uni.showToast({title:"请先选择节点",icon:"none"});const e=f.value[m.value];e.isAvailable?e.hasAuth?(o.value,c.value,e.tag,o.value?await T():await(async()=>{if(c.value)return void uni.showToast({title:"连接正在进行中，请稍候",icon:"none",duration:1e3});if(!n.value)return void uni.showToast({title:"请先登录",icon:"none"});if(null===m.value)return void uni.showToast({title:"请先选择节点",icon:"none"});const e=f.value[m.value];if(e.isAvailable)if(e.hasAuth){e.tag,c.value=!0,p.value="连接中...",h.value="连接中";try{await d.connect(e)}catch(t){}}else uni.showToast({title:"当前节点缺少认证信息",icon:"none"});else uni.showToast({title:"当前节点不可用",icon:"none"})})()):uni.showToast({title:"当前节点缺少认证信息",icon:"none"}):uni.showToast({title:"当前节点不可用",icon:"none"})},I=e=>{const t=void 0!==e.connected?e.connected:void 0!==e.isConnected&&e.isConnected;if(o.value=t,c.value=!1,t){if(p.value="已连接",h.value="断开连接",null!==m.value){const e=f.value[m.value];v.value=`${e.tag} · ${e.host}:${e.port}`}w.value=0,D(),V.value&&clearInterval(V.value),V.value=setInterval(D,1e3),uni.showToast({title:e.message||"VPN连接成功",icon:"success",duration:2e3})}else p.value=e.message||"未连接",h.value="连接VPN",v.value="--",g.value="--",V.value&&(clearInterval(V.value),V.value=null),e.message&&"未连接"!==e.message&&!e.message.includes("初始化")&&uni.showToast({title:e.message,icon:"none",duration:2e3})},D=()=>{w.value++;const e=Math.floor(w.value/3600),t=Math.floor(w.value%3600/60),n=w.value%60;g.value=e>0?`连接时间: ${e.toString().padStart(2,"0")}:${t.toString().padStart(2,"0")}:${n.toString().padStart(2,"0")}`:`连接时间: ${t.toString().padStart(2,"0")}:${n.toString().padStart(2,"0")}`},U=e=>{const t={"广东":"🇨🇳","河间":"🇨🇳","天津":"🇨🇳","宁波":"🇨🇳","蠡县":"🇨🇳","澄海":"🇨🇳","凤翔":"🇨🇳"};for(const[n,a]of Object.entries(t))if(e.includes(n))return a;return"🌐"},z=e=>{if(!e)return"未知";const t=new Date(e),n=new Date,a=Math.abs(n-t),s=Math.ceil(a/864e5);return s<=30?`${s}天后过期`:`${t.getFullYear()}-${(t.getMonth()+1).toString().padStart(2,"0")}-${t.getDate().toString().padStart(2,"0")}`};return(t,s)=>(e.openBlock(),e.createElementBlock("view",{class:"container"},[e.createElementVNode("view",{class:"header"},[e.createElementVNode("view",{class:"user-info"},[n.value?(e.openBlock(),e.createElementBlock("text",{key:0,class:"welcome-text"},"欢迎, "+e.toDisplayString(a.value),1)):(e.openBlock(),e.createElementBlock("text",{key:1,class:"welcome-text"},"请先登录")),e.createElementVNode("button",{class:"btn-auth",onClick:B},e.toDisplayString(n.value?"退出登录":"登录"),1)])]),e.createElementVNode("view",{class:"vpn-status-card"},[e.createElementVNode("view",{class:"status-header"},[e.createElementVNode("view",{class:e.normalizeClass(["status-indicator",P.value])},null,2),e.createElementVNode("text",{class:"status-text"},e.toDisplayString(p.value),1)]),e.createElementVNode("view",{class:"connection-info"},e.toDisplayString(v.value),1),e.createElementVNode("view",{class:"connection-time"},e.toDisplayString(g.value),1),e.createElementVNode("button",{class:e.normalizeClass(["btn-connect",{connecting:c.value}]),onClick:_,disabled:!n.value||0===A.value.length||null===m.value},e.toDisplayString(h.value),11,["disabled"])]),e.createElementVNode("view",{class:"section"},[e.createElementVNode("view",{class:"section-header"},[e.createElementVNode("text",{class:"section-title"},"节点列表"),e.createElementVNode("view",{class:"section-action",onClick:b},[e.createElementVNode("text",{class:"refresh-text"},"刷新"),e.createVNode(u,{type:"refresh",size:"16",color:"#4361ee"})])]),e.createElementVNode("view",{class:"nodes-stats"},[e.createElementVNode("text",{class:"stats-text"},"可用节点: "+e.toDisplayString(A.value.length)+"/"+e.toDisplayString(f.value.length),1)]),e.createElementVNode("scroll-view",{class:"node-list","scroll-y":""},[(e.openBlock(!0),e.createElementBlock(e.Fragment,null,e.renderList(f.value,((t,n)=>(e.openBlock(),e.createElementBlock("view",{key:t._id,class:e.normalizeClass(["node-item",{selected:m.value===n,offline:!t.isAvailable,"no-auth":!t.hasAuth}]),onClick:e=>(e=>{const t=f.value[e];t.isAvailable?t.hasAuth?(m.value=e,o.value&&(v.value=`${t.tag} · ${t.host}:${t.port}`),uni.showToast({title:`已选择: ${t.tag}`,icon:"success"})):uni.showToast({title:"该节点缺少认证信息",icon:"none"}):uni.showToast({title:"该节点不可用",icon:"none"})})(n)},[e.createElementVNode("view",{class:"node-info"},[e.createElementVNode("view",{class:"node-flag"},e.toDisplayString(U(t.tag)),1),e.createElementVNode("view",{class:"node-details"},[e.createElementVNode("text",{class:"node-name"},e.toDisplayString(t.tag),1),e.createElementVNode("view",{class:"node-meta"},[e.createElementVNode("text",{class:"node-location"},e.toDisplayString(t.host)+":"+e.toDisplayString(t.port),1),e.createElementVNode("text",{class:"node-expire"},e.toDisplayString(t.expireText),1)])])]),e.createElementVNode("view",{class:"node-status"},[e.createElementVNode("view",{class:"status-indicators"},[e.createElementVNode("text",{class:e.normalizeClass(t.status?"status-online":"status-offline")},e.toDisplayString(t.status?"在线":"离线"),3),t.hasAuth?e.createCommentVNode("",!0):(e.openBlock(),e.createElementBlock("text",{key:0,class:"status-noauth"},"无认证"))]),m.value===n?(e.openBlock(),e.createElementBlock("view",{key:0,class:"selected-indicator"},[e.createVNode(u,{type:"checkmark",size:"16",color:"#4361ee"})])):e.createCommentVNode("",!0)])],10,["onClick"])))),128)),0===f.value.length?(e.openBlock(),e.createElementBlock("view",{key:0,class:"empty-state"},[e.createElementVNode("text",null,"暂无节点数据，请先登录或刷新")])):e.createCommentVNode("",!0)])]),e.createElementVNode("view",{class:"section"},[e.createElementVNode("view",{class:"section-header"},[e.createElementVNode("text",{class:"section-title"},"选择应用")]),e.createElementVNode("view",{class:"app-list"},[(e.openBlock(!0),e.createElementBlock(e.Fragment,null,e.renderList(C.value,((t,n)=>(e.openBlock(),e.createElementBlock("view",{key:n,class:e.normalizeClass(["app-item",{selected:y.value.includes(n)}]),onClick:e=>(e=>{7===e?y.value=[7]:y.value.includes(e)?(y.value=y.value.filter((t=>t!==e)),0===y.value.length&&(y.value=[7])):(y.value=y.value.filter((e=>7!==e)),y.value.push(e))})(n)},[e.createElementVNode("view",{class:"app-icon"},[e.createVNode(u,{type:t.icon,size:"24",color:"#4361ee"},null,8,["type"])]),e.createElementVNode("text",{class:"app-label"},e.toDisplayString(t.name),1)],10,["onClick"])))),128))])]),e.createElementVNode("view",{class:"section tips-section"},[e.createElementVNode("view",{class:"section-header"},[e.createElementVNode("text",{class:"section-title"},"使用提示")]),e.createElementVNode("view",{class:"tips-content"},[e.createElementVNode("text",{class:"tip-item"},'• 请选择状态为"在线"且有认证信息的节点'),e.createElementVNode("text",{class:"tip-item"},"• 连接成功后，所有应用流量将通过VPN"),e.createElementVNode("text",{class:"tip-item"},"• 首次连接需要授予VPN权限")])])]))}},[["__scopeId","data-v-7156ce4e"]]),v=c({__name:"login",setup(t){const a=e.ref("test_pan_1234"),s=e.ref("123456"),i=async()=>{if(a.value&&s.value){uni.showLoading({title:"登录中..."});try{const e=await uni.request({url:"http://124.223.21.69/api/users/login",method:"POST",data:{username:a.value,password:s.value},header:{"Content-Type":"application/json"}});if(200!==e.statusCode||!e.data)throw new Error("登录失败: "+(e.data.message||"未知错误"));{const t=e.data.token||e.data.accessToken;if(!t)throw new Error("登录失败: 未获取到token");uni.setStorageSync("token",t),uni.setStorageSync("username",a.value),uni.hideLoading(),uni.showToast({title:"登录成功",icon:"success"}),setTimeout((()=>{uni.reLaunch({url:"/pages/index/index"})}),1500)}}catch(e){uni.hideLoading(),uni.showToast({title:"登录失败",icon:"none"}),n("error","at pages/login/login.vue:99","登录失败:",e)}}else uni.showToast({title:"请输入用户名和密码",icon:"none"})};return(t,n)=>(e.openBlock(),e.createElementBlock("view",{class:"login-container"},[e.createElementVNode("view",{class:"login-header"},[e.createElementVNode("view",{class:"title-container"},[e.createElementVNode("image",{class:"title-icon",src:"/static/icon.ico",mode:"aspectFit"}),e.createElementVNode("text",{class:"login-title"},"e加速")]),e.createElementVNode("text",{class:"login-subtitle"},"请登录您的VPN账户")]),e.createElementVNode("view",{class:"login-form"},[e.createElementVNode("view",{class:"input-group"},[e.createElementVNode("text",{class:"input-label"},"用户名"),e.withDirectives(e.createElementVNode("input",{class:"input-field",type:"text","onUpdate:modelValue":n[0]||(n[0]=e=>a.value=e),placeholder:"请输入用户名"},null,512),[[e.vModelText,a.value]])]),e.createElementVNode("view",{class:"input-group"},[e.createElementVNode("text",{class:"input-label"},"密码"),e.withDirectives(e.createElementVNode("input",{class:"input-field",type:"password","onUpdate:modelValue":n[1]||(n[1]=e=>s.value=e),placeholder:"请输入密码"},null,512),[[e.vModelText,s.value]])]),e.createElementVNode("button",{class:"btn-login",onClick:i},"登录"),e.createElementVNode("view",{class:"login-tips"})])]))}},[["__scopeId","data-v-b76c3a1a"]]);__definePage("pages/index/index",p),__definePage("pages/login/login",v);const g={__name:"App",setup:e=>(o((()=>{n("log","at App.vue:6","App Launch");uni.getStorageSync("token")&&uni.reLaunch({url:"/pages/index/index"})})),n("log","at App.vue:18","App Show"),i((()=>{n("log","at App.vue:22","App Hide")})),()=>{})};const{app:h,Vuex:m,Pinia:y}={app:e.createVueApp(g)};uni.Vuex=m,uni.Pinia=y,h.provide("__globalStyles",__uniConfig.styles),h._component.mpType="app",h._component.render=()=>{},h.mount("#app")}(Vue);
